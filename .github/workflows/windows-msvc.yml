name: Windows MSVC

on:
  push:
    branches: [master]
  pull_request:

jobs:
  ci-msvc:
    name: Windows MSVC
    runs-on: windows-latest
    env:
      PKG_CONFIG_PATH: 'C:\gnome\lib\pkgconfig'

    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      with:
        path: /gtk 
        key: ${{ runner.os }}-gtk
        restore-keys: |
          ${{ runner.os }}-gtk
        
    - name: Set up the PATH environment
      run: |
        echo "C:\pkg-config-lite-0.28-1\bin" >> $GITHUB_PATH
        echo "C:\gnome\bin" >> $GITHUB_PATH
      shell: bash
        
    - name: Install pkgconfig-lite
      run: |
        Invoke-WebRequest -Uri https://deac-fra.dl.sourceforge.net/project/pkgconfiglite/0.28-1/pkg-config-lite-0.28-1_bin-win32.zip -OutFile /pkg_config_lite.zip
        Expand-Archive /pkg_config_lite.zip -DestinationPath C:\
        ls C:\
        ls C:\pkg-config-lite-0.28-1
        ls C:\pkg-config-lite-0.28-1\bin
        pkg-config --version

    - name: Clone GTK
      working-directory: /
      run: |
        git clone -b 4.6.0 https://gitlab.gnome.org/GNOME/gtk.git --depth 1
        
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
        
    - name: Install Python Dependencies
      run: pip install meson ninja
      
    - name: Setup MSVC
      uses: bus1/cabuild/action/msdevshell@v1
      with:
        architecture: x64
        
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        components: clippy
        
    - name: Prepare GTK build
      working-directory: /gtk
      run: |
        meson setup builddir --prefix=C:/gnome -Dbuild-tests=false -Dmedia-gstreamer=disabled -Dbuild-examples=false
        
    - name: Build and install GTK
      working-directory: /gtk
      run: |
        meson install -C builddir

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --manifest-path ./gtk4/Cargo.toml --features v4_6 # investigate why --workspace builds gdk4-wayland
    - name: Clippy
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: --manifest-path ./gtk4/Cargo.toml --features v4_6 # investigate why --workspace builds gdk4-wayland
    - name: Tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --manifest-path ./gtk4/Cargo.toml --features v4_6 # investigate why --workspace builds gdk4-wayland

