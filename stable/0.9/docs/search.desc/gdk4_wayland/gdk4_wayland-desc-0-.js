searchState.loadedDescShard("gdk4_wayland", 0, "Rust GDK 4 Wayland bindings\nThe Wayland implementation of <code>gdk::Device</code>.\nThe Wayland implementation of <code>gdk::Display</code>.\nThe Wayland implementation of <code>gdk::GLContext</code>.\nThe Wayland implementation of <code>gdk::Monitor</code>.\nThe Wayland implementation of <code>gdk::Popup</code>.\nThe Wayland implementation of <code>gdk::Seat</code>.\nThe Wayland implementation of <code>gdk::Surface</code>.\nThe Wayland implementation of <code>gdk::Toplevel</code>.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nComparison for two GObjects.\nComparison for two GObjects.\nComparison for two GObjects.\nComparison for two GObjects.\nComparison for two GObjects.\nComparison for two GObjects.\nComparison for two GObjects.\nComparison for two GObjects.\nDestroy a handle that was obtained with …\nRetrieves the EGL display connection object for the given …\nEquality for two GObjects.\nEquality for two GObjects.\nEquality for two GObjects.\nEquality for two GObjects.\nEquality for two GObjects.\nEquality for two GObjects.\nEquality for two GObjects.\nEquality for two GObjects.\nAsynchronously obtains a handle for a surface that can be …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHashes the memory address of this object.\nHashes the memory address of this object.\nHashes the memory address of this object.\nHashes the memory address of this object.\nHashes the memory address of this object.\nHashes the memory address of this object.\nHashes the memory address of this object.\nHashes the memory address of this object.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the <code>/dev/input/event*</code> path of this device.\nPartial comparison for two GObjects.\nPartial comparison for two GObjects.\nPartial comparison for two GObjects.\nPartial comparison for two GObjects.\nPartial comparison for two GObjects.\nPartial comparison for two GObjects.\nPartial comparison for two GObjects.\nPartial comparison for two GObjects.\nTraits intended for blanket imports.\nReturns <code>true</code> if the interface was found in the display …\nSets the application id on a <code>gdk::Toplevel</code>.\nSets the cursor theme for the given @self.\nSets the startup notification ID for a display.\nMarks @self as transient for the surface to which the given\nGets the startup notification ID for a Wayland display, or …\nDestroys the handle that was obtained with …\nReturns the Wayland <code>wl_compositor</code> of a <code>gdk::Display</code>.\nReturns the Wayland <code>wl_display</code> of a <code>gdk::Display</code>.\nReturns the Wayland <code>wl_keyboard</code> of a <code>gdk::Device</code>.\nReturns the Wayland <code>wl_output</code> of a <code>gdk::Monitor</code>.\nReturns the Wayland <code>wl_pointer</code> of a <code>gdk::Device</code>.\nReturns the Wayland <code>wl_seat</code> of a <code>gdk::Device</code>.\nReturns the Wayland <code>wl_seat</code> of a <code>gdk::Seat</code>.\nTrait containing all <code>WaylandSurface</code> methods.\nTrait containing manually implemented methods of …\nForces next commit.\nForces next commit.\nReturns the Wayland <code>wl_surface</code> of a <code>gdk::Surface</code>.\nReturns the Wayland <code>wl_surface</code> of a <code>gdk::Surface</code>.")