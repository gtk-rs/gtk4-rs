// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT
#![allow(deprecated)]

use crate::{ffi, TreePath};
use glib::{prelude::*, translate::*};

glib::wrapper! {
    #[doc(alias = "GtkTreeDragSource")]
    pub struct TreeDragSource(Interface<ffi::GtkTreeDragSource, ffi::GtkTreeDragSourceIface>);

    match fn {
        type_ => || ffi::gtk_tree_drag_source_get_type(),
    }
}

impl TreeDragSource {
    pub const NONE: Option<&'static TreeDragSource> = None;
}

mod sealed {
    pub trait Sealed {}
    impl<T: super::IsA<super::TreeDragSource>> Sealed for T {}
}

pub trait TreeDragSourceExt: IsA<TreeDragSource> + sealed::Sealed + 'static {
    #[cfg_attr(feature = "v4_10", deprecated = "Since 4.10")]
    #[allow(deprecated)]
    #[doc(alias = "gtk_tree_drag_source_drag_data_delete")]
    fn drag_data_delete(&self, path: &TreePath) -> bool {
        unsafe {
            from_glib(ffi::gtk_tree_drag_source_drag_data_delete(
                self.as_ref().to_glib_none().0,
                mut_override(path.to_glib_none().0),
            ))
        }
    }

    #[cfg_attr(feature = "v4_10", deprecated = "Since 4.10")]
    #[allow(deprecated)]
    #[doc(alias = "gtk_tree_drag_source_drag_data_get")]
    fn drag_data_get(&self, path: &TreePath) -> Option<gdk::ContentProvider> {
        unsafe {
            from_glib_full(ffi::gtk_tree_drag_source_drag_data_get(
                self.as_ref().to_glib_none().0,
                mut_override(path.to_glib_none().0),
            ))
        }
    }

    #[cfg_attr(feature = "v4_10", deprecated = "Since 4.10")]
    #[allow(deprecated)]
    #[doc(alias = "gtk_tree_drag_source_row_draggable")]
    fn row_draggable(&self, path: &TreePath) -> bool {
        unsafe {
            from_glib(ffi::gtk_tree_drag_source_row_draggable(
                self.as_ref().to_glib_none().0,
                mut_override(path.to_glib_none().0),
            ))
        }
    }
}

impl<O: IsA<TreeDragSource>> TreeDragSourceExt for O {}
