// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files.git)
// DO NOT EDIT

use glib::object::IsA;
use std::fmt;

glib::wrapper! {
    #[doc(alias = "GtkSymbolicPaintable")]
    pub struct SymbolicPaintable(Interface<ffi::GtkSymbolicPaintable, ffi::GtkSymbolicPaintableInterface>) @requires gdk::Paintable;

    match fn {
        type_ => || ffi::gtk_symbolic_paintable_get_type(),
    }
}

impl SymbolicPaintable {
    pub const NONE: Option<&'static SymbolicPaintable> = None;
}

pub trait SymbolicPaintableExt: 'static {}

impl<O: IsA<SymbolicPaintable>> SymbolicPaintableExt for O {}

impl fmt::Display for SymbolicPaintable {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        f.write_str("SymbolicPaintable")
    }
}
