// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use crate::{ffi, Surface};
use glib::{prelude::*, translate::*};

glib::wrapper! {
    #[doc(alias = "GdkDragSurface")]
    pub struct DragSurface(Interface<ffi::GdkDragSurface, ffi::GdkDragSurfaceInterface>) @requires Surface;

    match fn {
        type_ => || ffi::gdk_drag_surface_get_type(),
    }
}

impl DragSurface {
    pub const NONE: Option<&'static DragSurface> = None;
}

mod sealed {
    pub trait Sealed {}
    impl<T: super::IsA<super::DragSurface>> Sealed for T {}
}

pub trait DragSurfaceExt: IsA<DragSurface> + sealed::Sealed + 'static {
    #[doc(alias = "gdk_drag_surface_present")]
    fn present(&self, width: i32, height: i32) -> bool {
        unsafe {
            from_glib(ffi::gdk_drag_surface_present(
                self.as_ref().to_glib_none().0,
                width,
                height,
            ))
        }
    }
}

impl<O: IsA<DragSurface>> DragSurfaceExt for O {}
