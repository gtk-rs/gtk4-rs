// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use crate::{ffi, MemoryFormat, Paintable, Texture};
use glib::translate::*;

glib::wrapper! {
    #[doc(alias = "GdkMemoryTexture")]
    pub struct MemoryTexture(Object<ffi::GdkMemoryTexture, ffi::GdkMemoryTextureClass>) @extends Texture, @implements Paintable, gio::Icon, gio::LoadableIcon;

    match fn {
        type_ => || ffi::gdk_memory_texture_get_type(),
    }
}

impl MemoryTexture {
    #[doc(alias = "gdk_memory_texture_new")]
    pub fn new(
        width: i32,
        height: i32,
        format: MemoryFormat,
        bytes: &glib::Bytes,
        stride: usize,
    ) -> MemoryTexture {
        assert_initialized_main_thread!();
        unsafe {
            from_glib_full(ffi::gdk_memory_texture_new(
                width,
                height,
                format.into_glib(),
                bytes.to_glib_none().0,
                stride,
            ))
        }
    }
}

unsafe impl Send for MemoryTexture {}
unsafe impl Sync for MemoryTexture {}
