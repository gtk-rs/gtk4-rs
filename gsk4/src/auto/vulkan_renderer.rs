// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use crate::Renderer;
use glib::{prelude::*, translate::*};
use std::fmt;

glib::wrapper! {
    #[doc(alias = "GskVulkanRenderer")]
    pub struct VulkanRenderer(Object<ffi::GskVulkanRenderer, ffi::GskVulkanRendererClass>) @extends Renderer;

    match fn {
        type_ => || ffi::gsk_vulkan_renderer_get_type(),
    }
}

impl VulkanRenderer {
    #[doc(alias = "gsk_vulkan_renderer_new")]
    pub fn new() -> VulkanRenderer {
        assert_initialized_main_thread!();
        unsafe { Renderer::from_glib_full(ffi::gsk_vulkan_renderer_new()).unsafe_cast() }
    }
}

impl Default for VulkanRenderer {
    fn default() -> Self {
        Self::new()
    }
}

impl fmt::Display for VulkanRenderer {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        f.write_str("VulkanRenderer")
    }
}
